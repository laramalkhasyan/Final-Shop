{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","shop/tests/lint/app.lint-test.js","shop/tests/lint/templates.template.lint-test.js","shop/tests/lint/tests.lint-test.js","shop/tests/test-helper.js","shop/tests/unit/adapters/application-test.js","shop/tests/unit/controllers/shops-test.js","shop/tests/unit/controllers/shops/products-test.js","shop/tests/unit/models/product-test.js","shop/tests/unit/models/products-test.js","shop/tests/unit/models/shop-test.js","shop/tests/unit/models/shops-test.js","shop/tests/unit/routes/application-test.js","shop/tests/unit/routes/index-test.js","shop/tests/unit/routes/products-test.js","shop/tests/unit/routes/shop-test.js","shop/tests/unit/routes/shops-test.js","shop/tests/unit/routes/shops/shop-test.js","shop/tests/unit/routes/shops/shop/products-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"shop/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/products.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/products.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/shops/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/shops/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/shops/products.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/shops/products.js should pass ESLint\\n\\n49:17 - \\'productId\\' is defined but never used. (no-unused-vars)\\n56:9 - Unexpected console statement. (no-console)');\n  });\n  QUnit.test('models/product.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/product.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/shop.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/shop.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/shops.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/shops.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/shops/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/shops/index.js should pass ESLint\\n\\n4:11 - \\'params\\' is defined but never used. (no-unused-vars)');\n  });\n  QUnit.test('routes/shops/products.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/shops/products.js should pass ESLint\\n\\n');\n  });\n});","define(\"shop/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('shop/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'shop/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('shop/templates/components/products.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'shop/templates/components/products.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('shop/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'shop/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('shop/templates/shops.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'shop/templates/shops.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('shop/templates/shops/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'shop/templates/shops/index.hbs should pass TemplateLint.\\n\\nshop/templates/shops/index.hbs\\n  36:39  error  Interaction added to non-interactive element  no-invalid-interactive\\n  25:10  error  Unexpected {{log}} usage.  no-log\\n  9:25  error  you must use double quotes in templates  quotes\\n');\n  });\n  QUnit.test('shop/templates/shops/products.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'shop/templates/shops/products.hbs should pass TemplateLint.\\n\\nshop/templates/shops/products.hbs\\n  58:37  error  Interaction added to non-interactive element  no-invalid-interactive\\n  3:2  error  Tables must have a table group (thead, tbody or tfoot).  table-groups\\n');\n  });\n});","define(\"shop/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/adapters/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/controllers/shops-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/shops-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/controllers/shops/products-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/shops/products-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/product-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/product-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/products-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/products-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/shop-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/shop-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/shops-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/shops-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/products-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/products-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/shop-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/shop-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/shops-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/shops-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/shops/shop-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/shops/shop-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/shops/shop/products-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/shops/shop/products-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"shop/tests/test-helper\", [\"shop/app\", \"shop/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"shop/tests/unit/adapters/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Adapter | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let adapter = this.owner.lookup('adapter:application');\n      assert.ok(adapter);\n    });\n  });\n});","define(\"shop/tests/unit/controllers/shops-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | shops', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:shops');\n      assert.ok(controller);\n    });\n  });\n});","define(\"shop/tests/unit/controllers/shops/products-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | shops/products', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:shops/products');\n      assert.ok(controller);\n    });\n  });\n});","define(\"shop/tests/unit/models/product-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | product', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('product', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"shop/tests/unit/models/products-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | products', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('products', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"shop/tests/unit/models/shop-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | shop', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('shop', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"shop/tests/unit/models/shops-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | shops', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('shops', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"shop/tests/unit/routes/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:application');\n      assert.ok(route);\n    });\n  });\n});","define(\"shop/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"shop/tests/unit/routes/products-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | products', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:products');\n      assert.ok(route);\n    });\n  });\n});","define(\"shop/tests/unit/routes/shop-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | shop', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:shop');\n      assert.ok(route);\n    });\n  });\n});","define(\"shop/tests/unit/routes/shops-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | shops', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:shops');\n      assert.ok(route);\n    });\n  });\n});","define(\"shop/tests/unit/routes/shops/shop-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | shops/shop', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:shops/shop');\n      assert.ok(route);\n    });\n  });\n});","define(\"shop/tests/unit/routes/shops/shop/products-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | shops/shop/products', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:shops/shop/products');\n      assert.ok(route);\n    });\n  });\n});","define('shop/config/environment', [], function() {\n  var prefix = 'shop';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('shop/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/DA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}