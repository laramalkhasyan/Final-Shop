{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","shop/tests/lint/app.lint-test.js","shop/tests/lint/templates.template.lint-test.js","shop/tests/lint/tests.lint-test.js","shop/tests/test-helper.js","shop/tests/unit/models/products-test.js","shop/tests/unit/models/shops-test.js","shop/tests/unit/routes/index-test.js","shop/tests/unit/routes/products-test.js","shop/tests/unit/routes/shops-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"shop/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/products.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/products.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/shops.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/shops.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/products.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/products.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/shops.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/shops.js should pass ESLint\\n\\n');\n  });\n});","define(\"shop/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('shop/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'shop/templates/application.hbs should pass TemplateLint.\\n\\nshop/templates/application.hbs\\n  3:6  error  Incorrect indentation for `<h2>` beginning at L3:C6. Expected `<h2>` to be at an indentation of 4 but was found at 6.  block-indentation\\n  4:6  error  Incorrect indentation for `<div>` beginning at L4:C6. Expected `<div>` to be at an indentation of 4 but was found at 6.  block-indentation\\n');\n  });\n  QUnit.test('shop/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'shop/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('shop/templates/products.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'shop/templates/products.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('shop/templates/shops.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'shop/templates/shops.hbs should pass TemplateLint.\\n\\nshop/templates/shops.hbs\\n  6:11  error  Wrong linebreak used. Expected LF but found CRLF  linebreak-style\\n  7:5  error  Wrong linebreak used. Expected LF but found CRLF  linebreak-style\\n');\n  });\n});","define(\"shop/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/products-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/products-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/shops-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'unit/models/shops-test.js should pass ESLint\\n\\n9:11 - \\'visit\\' is not defined. (no-undef)\\n10:11 - \\'fillIn\\' is not defined. (no-undef)\\n11:11 - \\'click\\' is not defined. (no-undef)');\n  });\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/products-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/products-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/shops-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/shops-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"shop/tests/test-helper\", [\"shop/app\", \"shop/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"shop/tests/unit/models/products-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | products', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('products', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"shop/tests/unit/models/shops-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | shops', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('I can create a movie', async function (assert) {\n      await visit('/shops/new');\n      await fillIn('.name', 'Debenhams');\n      await click('.submit');\n      assert.dom('h2').includesText('New movie saved!');\n      assert.equal(this.server.db.shops[0].name, 'Debenhams');\n    });\n  });\n});","define(\"shop/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"shop/tests/unit/routes/products-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | products', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:products');\n      assert.ok(route);\n    });\n  });\n});","define(\"shop/tests/unit/routes/shops-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | shops', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:shops');\n      assert.ok(route);\n    });\n  });\n});","define('shop/config/environment', [], function() {\n  var prefix = 'shop';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('shop/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}